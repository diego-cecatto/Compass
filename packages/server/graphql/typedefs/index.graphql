scalar JSON

type Query {
    components(scope: String): [Component]!
    component(filePath: String!): Component
    documentation(filePath: String): String
    documentationDefault: String
}

type Component {
    name: String!
    path: String!
    version: String
    docPath: String
    basePath: String!
    fullPath: String!
    description: String
    childs: [Component]
    dependencies: [Dependencies]
    props: JSON
}

fragment ComponentFields on Component {
    name
    path
    docPath
    description
    dependecies
    properties
}

fragment ComponentRecursive on Component {
    childs {
        ...ComponentFields
        childs {
            ...ComponentFields
            childs {
                ...ComponentFields
            }
        }
    }
}

type Dependencies {
    name: String!
    scoped: Boolean
    lib: Boolean
}

type Property {
    name: String
    description: String
    tsType: String
    type: String
    flowType: String
    required: Boolean
    defaultValue: DefaultValueDescriptor
}

type Dictionary {
    key: String
    value: String
}

type DefaultValueDescriptor {
    value: String
    computed: Boolean
}
